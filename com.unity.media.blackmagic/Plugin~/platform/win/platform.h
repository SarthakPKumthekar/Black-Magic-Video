/* -LICENSE-START-
** Copyright (c) 2018 Blackmagic Design
**
** Permission is hereby granted, free of charge, to any person or organization
** obtaining a copy of the software and accompanying documentation covered by
** this license (the "Software") to use, reproduce, display, distribute,
** execute, and transmit the Software, and to prepare derivative works of the
** Software, and to permit third-parties to whom the Software is furnished to
** do so, all subject to the following:
**
** The copyright notices in the Software and this entire statement, including
** the above license grant, this restriction and the following disclaimer,
** must be included in all copies of the Software, in whole or in part, and
** all derivative works of the Software, unless such copies or derivative
** works are solely in the form of machine-executable object code generated by
** a source language processor.
**
** THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
** IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
** FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
** SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
** FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
** ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
** DEALINGS IN THE SOFTWARE.
** -LICENSE-END-
*/

#pragma once

#include <comdef.h>
#include <string>
#include <functional>
#include <stdint.h>
#include "DeckLinkAPI.h"

HRESULT GetDeckLinkIterator(IDeckLinkIterator **deckLinkIterator);
HRESULT GetDeckLinkDiscovery(void ** deckLinkIterator);


#define dlbool_t	BOOL
#define dlstring_t	BSTR
#define dllonglong  LONGLONG

// Forcing the input APIs to 11.5.1 for compatibility with MoSys requirements,
// which is aligned with what Unreal supports.
typedef IDeckLinkInput_v11_5_1         DeckLinkInput;
typedef IDeckLinkInputCallback_v11_5_1 DeckLinkInputCallback;
typedef IDeckLinkConfiguration_v10_11  DeckLinkConfiguration;
const auto IID_DeckLinkInput         = IID_IDeckLinkInput_v11_5_1;
const auto IID_DeckLinkInputCallback = IID_IDeckLinkInputCallback_v11_5_1;

const std::function<void(dlstring_t)> DeleteString = SysFreeString;

const std::function<std::string(dlstring_t)> DlToStdString = [](dlstring_t dl_str) -> std::string {
	int wlen = ::SysStringLen(dl_str);
	int mblen = ::WideCharToMultiByte(CP_ACP, 0, (wchar_t*)dl_str, wlen, NULL, 0, NULL, NULL);

	std::string ret_str(mblen, '\0');
	mblen = ::WideCharToMultiByte(CP_ACP, 0, (wchar_t*)dl_str, wlen, &ret_str[0], mblen, NULL, NULL);

	return ret_str;
};

const std::function<dlstring_t(std::string)> StdToDlString = [](std::string std_str) -> dlstring_t {
	int wlen = ::MultiByteToWideChar(CP_ACP, 0, std_str.data(), (int)std_str.length(), NULL, 0);

	dlstring_t ret_str = ::SysAllocStringLen(NULL, wlen);
	::MultiByteToWideChar(CP_ACP, 0, std_str.data(), (int)std_str.length(), ret_str, wlen);

	return ret_str;
};
